/*! For license information please see 146.bundle.js.LICENSE.txt */

(self.webpackChunk_adobe_aem_boilerplate = self.webpackChunk_adobe_aem_boilerplate || []).push([[146], {
  146: (t, e, r) => {
    r.r(e), r.d(e, { default: () => v }); const n = r(927); function a(t) { return a = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (t) { return typeof t; } : function (t) { return t && typeof Symbol === 'function' && t.constructor === Symbol && t !== Symbol.prototype ? 'symbol' : typeof t; }, a(t); } function o() {
      o = function () { return e; }; let t; var e = {}; const r = Object.prototype; const n = r.hasOwnProperty; const i = Object.defineProperty || function (t, e, r) { t[e] = r.value; }; const c = typeof Symbol === 'function' ? Symbol : {}; const u = c.iterator || '@@iterator'; const l = c.asyncIterator || '@@asyncIterator'; const s = c.toStringTag || '@@toStringTag'; function f(t, e, r) {
        return Object.defineProperty(t, e, {
          value: r, enumerable: !0, configurable: !0, writable: !0,
        }), t[e];
      } try { f({}, ''); } catch (t) { f = function (t, e, r) { return t[e] = r; }; } function p(t, e, r, n) { const a = e && e.prototype instanceof g ? e : g; const o = Object.create(a.prototype); const c = new P(n || []); return i(o, '_invoke', { value: W(t, r, c) }), o; } function d(t, e, r) { try { return { type: 'normal', arg: t.call(e, r) }; } catch (t) { return { type: 'throw', arg: t }; } }e.wrap = p; const h = 'suspendedStart'; const v = 'suspendedYield'; const y = 'executing'; const m = 'completed'; const b = {}; function g() {} function w() {} function L() {} let x = {}; f(x, u, (function () { return this; })); const E = Object.getPrototypeOf; const k = E && E(E(C([]))); k && k !== r && n.call(k, u) && (x = k); const _ = L.prototype = g.prototype = Object.create(x); function O(t) { ['next', 'throw', 'return'].forEach(((e) => { f(t, e, (function (t) { return this._invoke(e, t); })); })); } function S(t, e) { function r(o, i, c, u) { const l = d(t[o], t, i); if (l.type !== 'throw') { const s = l.arg; const f = s.value; return f && a(f) == 'object' && n.call(f, '__await') ? e.resolve(f.__await).then(((t) => { r('next', t, c, u); }), ((t) => { r('throw', t, c, u); })) : e.resolve(f).then(((t) => { s.value = t, c(s); }), ((t) => r('throw', t, c, u))); }u(l.arg); } let o; i(this, '_invoke', { value(t, n) { function a() { return new e(((e, a) => { r(t, n, e, a); })); } return o = o ? o.then(a, a) : a(); } }); } function W(e, r, n) { let a = h; return function (o, i) { if (a === y) throw Error('Generator is already running'); if (a === m) { if (o === 'throw') throw i; return { value: t, done: !0 }; } for (n.method = o, n.arg = i; ;) { const c = n.delegate; if (c) { const u = j(c, n); if (u) { if (u === b) continue; return u; } } if (n.method === 'next')n.sent = n._sent = n.arg; else if (n.method === 'throw') { if (a === h) throw a = m, n.arg; n.dispatchException(n.arg); } else n.method === 'return' && n.abrupt('return', n.arg); a = y; const l = d(e, r, n); if (l.type === 'normal') { if (a = n.done ? m : v, l.arg === b) continue; return { value: l.arg, done: n.done }; }l.type === 'throw' && (a = m, n.method = 'throw', n.arg = l.arg); } }; } function j(e, r) { const n = r.method; const a = e.iterator[n]; if (a === t) return r.delegate = null, n === 'throw' && e.iterator.return && (r.method = 'return', r.arg = t, j(e, r), r.method === 'throw') || n !== 'return' && (r.method = 'throw', r.arg = new TypeError(`The iterator does not provide a '${n}' method`)), b; const o = d(a, e.iterator, r.arg); if (o.type === 'throw') return r.method = 'throw', r.arg = o.arg, r.delegate = null, b; const i = o.arg; return i ? i.done ? (r[e.resultName] = i.value, r.next = e.nextLoc, r.method !== 'return' && (r.method = 'next', r.arg = t), r.delegate = null, b) : i : (r.method = 'throw', r.arg = new TypeError('iterator result is not an object'), r.delegate = null, b); } function T(t) { const e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function N(t) { const e = t.completion || {}; e.type = 'normal', delete e.arg, t.completion = e; } function P(t) { this.tryEntries = [{ tryLoc: 'root' }], t.forEach(T, this), this.reset(!0); } function C(e) { if (e || e === '') { const r = e[u]; if (r) return r.call(e); if (typeof e.next === 'function') return e; if (!isNaN(e.length)) { let o = -1; const i = function r() { for (;++o < e.length;) if (n.call(e, o)) return r.value = e[o], r.done = !1, r; return r.value = t, r.done = !0, r; }; return i.next = i; } } throw new TypeError(`${a(e)} is not iterable`); } return w.prototype = L, i(_, 'constructor', { value: L, configurable: !0 }), i(L, 'constructor', { value: w, configurable: !0 }), w.displayName = f(L, s, 'GeneratorFunction'), e.isGeneratorFunction = function (t) { const e = typeof t === 'function' && t.constructor; return !!e && (e === w || (e.displayName || e.name) === 'GeneratorFunction'); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, L) : (t.__proto__ = L, f(t, s, 'GeneratorFunction')), t.prototype = Object.create(_), t; }, e.awrap = function (t) { return { __await: t }; }, O(S.prototype), f(S.prototype, l, (function () { return this; })), e.AsyncIterator = S, e.async = function (t, r, n, a, o) { void 0 === o && (o = Promise); const i = new S(p(t, r, n, a), o); return e.isGeneratorFunction(r) ? i : i.next().then(((t) => (t.done ? t.value : i.next()))); }, O(_), f(_, s, 'Generator'), f(_, u, (function () { return this; })), f(_, 'toString', (() => '[object Generator]')), e.keys = function (t) { const e = Object(t); const r = []; for (const n in e)r.push(n); return r.reverse(), function t() { for (;r.length;) { const n = r.pop(); if (n in e) return t.value = n, t.done = !1, t; } return t.done = !0, t; }; }, e.values = C, P.prototype = {
        constructor: P, reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = 'next', this.arg = t, this.tryEntries.forEach(N), !e) for (const r in this)r.charAt(0) === 't' && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop() { this.done = !0; const t = this.tryEntries[0].completion; if (t.type === 'throw') throw t.arg; return this.rval; }, dispatchException(e) { if (this.done) throw e; const r = this; function a(n, a) { return c.type = 'throw', c.arg = e, r.next = n, a && (r.method = 'next', r.arg = t), !!a; } for (let o = this.tryEntries.length - 1; o >= 0; --o) { const i = this.tryEntries[o]; var c = i.completion; if (i.tryLoc === 'root') return a('end'); if (i.tryLoc <= this.prev) { const u = n.call(i, 'catchLoc'); const l = n.call(i, 'finallyLoc'); if (u && l) { if (this.prev < i.catchLoc) return a(i.catchLoc, !0); if (this.prev < i.finallyLoc) return a(i.finallyLoc); } else if (u) { if (this.prev < i.catchLoc) return a(i.catchLoc, !0); } else { if (!l) throw Error('try statement without catch or finally'); if (this.prev < i.finallyLoc) return a(i.finallyLoc); } } } }, abrupt(t, e) { for (let r = this.tryEntries.length - 1; r >= 0; --r) { const a = this.tryEntries[r]; if (a.tryLoc <= this.prev && n.call(a, 'finallyLoc') && this.prev < a.finallyLoc) { var o = a; break; } }o && (t === 'break' || t === 'continue') && o.tryLoc <= e && e <= o.finallyLoc && (o = null); const i = o ? o.completion : {}; return i.type = t, i.arg = e, o ? (this.method = 'next', this.next = o.finallyLoc, b) : this.complete(i); }, complete(t, e) { if (t.type === 'throw') throw t.arg; return t.type === 'break' || t.type === 'continue' ? this.next = t.arg : t.type === 'return' ? (this.rval = this.arg = t.arg, this.method = 'return', this.next = 'end') : t.type === 'normal' && e && (this.next = e), b; }, finish(t) { for (let e = this.tryEntries.length - 1; e >= 0; --e) { const r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), N(r), b; } }, catch(t) { for (let e = this.tryEntries.length - 1; e >= 0; --e) { const r = this.tryEntries[e]; if (r.tryLoc === t) { const n = r.completion; if (n.type === 'throw') { var a = n.arg; N(r); } return a; } } throw Error('illegal catch attempt'); }, delegateYield(e, r, n) { return this.delegate = { iterator: C(e), resultName: r, nextLoc: n }, this.method === 'next' && (this.arg = t), b; },
      }, e;
    } function i(t, e, r, n, a, o, i) { try { var c = t[o](i); var u = c.value; } catch (t) { return void r(t); }c.done ? e(u) : Promise.resolve(u).then(n, a); } function c(t) { return function () { const e = this; const r = arguments; return new Promise(((n, a) => { const o = t.apply(e, r); function c(t) { i(o, n, a, c, u, 'next', t); } function u(t) { i(o, n, a, c, u, 'throw', t); }c(void 0); })); }; } function u(t) { const e = document.createElement('div'); return t.Style && (e.className = t.Style), e.classList.add('field-wrapper', ''.concat(t.Type, '-wrapper')), e.dataset.fieldset = t.Fieldset, e; } const l = []; function s(t) { const e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ''; const r = (0, n.L4)('form-'.concat(t.Name).concat(e)); l[r] = l[r] || 0; const a = l[r] ? '-'.concat(l[r]) : ''; return l[r] += 1, ''.concat(r).concat(a); } function f(t) { const e = document.createElement('label'); return e.id = s(t, '-label'), e.innerHTML = t.Label || t.Name, e.setAttribute('for', t.Id), t.Mandatory.toLowerCase() !== 'true' && t.Mandatory.toLowerCase() !== 'x' || (e.dataset.required = !0), e; } function p(t, e) { t.id = e.Id, t.name = e.Name, t.required = e.Mandatory && (e.Mandatory.toLowerCase() === 'true' || e.Mandatory.toLowerCase() === 'x'), t.placeholder = e.Placeholder, t.value = e.Value; } const d = function (t) { const e = document.createElement('input'); e.type = t.Type, p(e, t); const r = u(t); const n = f(t); return e.setAttribute('aria-labelledby', n.id), r.append(e), t.Type === 'radio' || t.Type === 'checkbox' ? r.append(n) : r.prepend(n), { field: e, fieldWrapper: r }; }; const h = {
      select: (function () { const t = c(o().mark((function t(e) { let r; let n; let a; let i; let c; let l; return o().wrap(((t) => { for (;;) switch (t.prev = t.next) { case 0: if (p(r = document.createElement('select'), e), n = function (t) { const e = t.text; const n = t.value; const a = document.createElement('option'); return a.text = e.trim(), a.value = n.trim(), a.value === r.value && a.setAttribute('selected', ''), r.add(a), a; }, e.Placeholder && n({ text: e.Placeholder, value: '' }).setAttribute('disabled', ''), !e.Options) { t.next = 19; break; } if (a = [], !e.Options.startsWith('https://')) { t.next = 17; break; } return i = new URL(e.Options), t.next = 10, fetch(''.concat(i.pathname).concat(i.search)); case 10: return c = t.sent, t.next = 13, c.json(); case 13: t.sent.data.forEach(((t) => { a.push({ text: t.Option, value: t.Value || t.Option }); })), t.next = 18; break; case 17: a = e.Options.split(',').map(((t) => ({ text: t.trim(), value: t.trim().toLowerCase() }))); case 18: a.forEach(((t) => n(t))); case 19: return (l = u(e)).append(r), l.prepend(f(e)), t.abrupt('return', { field: r, fieldWrapper: l }); case 23: case 'end': return t.stop(); } }), t); }))); return function (e) { return t.apply(this, arguments); }; }()), heading(t) { const e = u(t); const r = t.Style && t.Style.includes('sub-heading') ? 3 : 2; const n = document.createElement('h'.concat(r)); return n.innerHTML = t.Value || t.Label, n.id = t.Id, e.append(n), { field: n, fieldWrapper: e }; }, plaintext(t) { const e = u(t); const r = document.createElement('p'); return r.innerHTML = t.Value || t.Label, r.id = t.Id, e.append(r), { field: r, fieldWrapper: e }; }, 'text-area': function (t) { const e = document.createElement('textarea'); p(e, t); const r = u(t); const n = f(t); return e.setAttribute('aria-labelledby', n.id), r.append(e), r.prepend(n), { field: e, fieldWrapper: r }; }, toggle(t) { const e = d(t); const r = e.field; const n = e.fieldWrapper; r.type = 'checkbox', r.value || (r.value = 'on'), r.classList.add('toggle'), n.classList.add('selection-wrapper'); const a = document.createElement('div'); a.classList.add('switch'), a.append(r), n.append(a); const o = document.createElement('span'); return o.classList.add('slider'), a.append(o), o.addEventListener('click', (() => { r.checked = !r.checked; })), { field: r, fieldWrapper: n }; }, submit(t) { const e = document.createElement('button'); e.textContent = t.Label || t.Name, e.classList.add('button'), e.type = 'submit'; const r = u(t); return r.append(e), { field: e, fieldWrapper: r }; }, confirmation(t, e) { return e.dataset.confirmation = new URL(t.Value).pathname, {}; }, fieldset(t) { const e = document.createElement('fieldset'); if (p(e, t), t.Label) { const r = document.createElement('legend'); r.textContent = t.Label, e.append(r); } const n = u(t); return n.append(e), { field: e, fieldWrapper: n }; }, checkbox(t) { const e = d(t); const r = e.field; const n = e.fieldWrapper; return r.value || (r.value = 'checked'), n.classList.add('selection-wrapper'), { field: r, fieldWrapper: n }; }, radio(t) { const e = d(t); const r = e.field; const n = e.fieldWrapper; return r.value || (r.value = t.Label || 'on'), n.classList.add('selection-wrapper'), { field: r, fieldWrapper: n }; },
    }; function v(t, e) { return y.apply(this, arguments); } function y() { return (y = c(o().mark((function t(e, r) { let n; let a; let i; return o().wrap(((t) => { for (;;) switch (t.prev = t.next) { case 0: return e.Id = e.Id || s(e), n = e.Type.toLowerCase(), a = h[n] || d, t.next = 5, a(e, r); case 5: return i = t.sent, t.abrupt('return', i.fieldWrapper); case 7: case 'end': return t.stop(); } }), t); })))).apply(this, arguments); }
  },
}]);
